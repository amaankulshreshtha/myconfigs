[user]
        name = Amaan Kulshreshtha
        email = amaan.kulshreshtha@accenture.com
[init]
        templatedir = /Users/amaan.kulshreshtha/.acn-security-tools/git-template
        defaultBranch = main
[core]
        autocrlf = false
        eol = LF
        fileMode = false
        excludesfile = /Users/amaan.kulshreshtha/.gitignore_global
        pager = diff-so-fancy | less --tabs=4 -RFX
        # VSCode
        editor = code --wait
        # Don't consider trailing space change as a cause for merge conflicts
        whitespace = -trailing-space
        # Global shared hooks directory
        # hooksPath = ~/.githooks
[alias]
        # List available aliases
        aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
        # Command shortcuts
        ci = commit
        co = checkout
        st = status
        ps = push
        pl = pull
        br = branch
        # Display tree-like log, because default log is a pain…
        lg = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
        # Useful when you have to update your last commit
        # with staged files without editing the commit message.
        oops = commit --amend --no-edit
        # Ensure that force-pushing won't lose someone else's work (only mine).
        push-with-lease = push --force-with-lease
        # Rebase won’t trigger hooks on each "replayed" commit.
        # This is an ugly hack that will replay each commit during rebase with the
        # standard `commit` command which will trigger hooks.
        rebase-with-hooks = rebase -x 'git reset --soft HEAD~1 && git commit -C HEAD@{1}'
        # List local commits that were not pushed to remote repository
        review-local = "!git lg @{push}.."
        # Edit last commit message
        reword = commit --amend
        # Undo last commit but keep changed files in stage
        uncommit = reset --soft HEAD~1
        # Remove file(s) from Git but not from disk
        untrack = rm --cache --
[diff]
        renamelimit = 5000
        # Use better, descriptive initials (c, i, w) instead of a/b.
        mnemonicPrefix = true
        # Show renames/moves as such
        renames = true
        # When using --word-diff, assume --word-diff-regex=.
        wordRegex = .
        # Display submodule-related information (commit listings)
        submodule = log
        # Use VSCode as default diff tool when running `git diff-tool`
        tool = vscode
[difftool "vscode"]
        cmd = code --wait --diff $LOCAL $REMOTE
[mergetool "sourcetree"]
        cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
        trustExitCode = true
[commit]
        template = /Users/amaan.kulshreshtha/.stCommitMsg
[color]
        ui = true
[color "diff-highlight"]
        oldNormal = red bold
        oldHighlight = red bold 52
        newNormal = green bold
        newHighlight = green bold 22
[color "diff"]
        meta = 11
        frag = magenta bold
        commit = yellow bold
        old = red bold
        new = green bold
        whitespace = red reverse
[color "branch"]
        # Blue on black is hard to read in git branch -vv: use cyan instead
        upstream = cyan
[interactive]
        diffFilter = diff-so-fancy --patch
[pull]
        rebase = false
